local NovaLib = {}

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Theme Definitions
local Themes = {
    Default = {
        Background = Color3.fromRGB(20, 20, 20),
        TabList = Color3.fromRGB(15, 15, 15),
        TabButtonActive = Color3.fromRGB(50, 50, 50),
        TabButtonInactive = Color3.fromRGB(30, 30, 30),
        TextColor = Color3.fromRGB(255, 255, 255),
    },
    Ocean = {
        Background = Color3.fromRGB(10, 30, 60),
        TabList = Color3.fromRGB(8, 20, 45),
        TabButtonActive = Color3.fromRGB(30, 60, 90),
        TabButtonInactive = Color3.fromRGB(15, 30, 50),
        TextColor = Color3.fromRGB(180, 220, 255),
    },
    Forest = {
        Background = Color3.fromRGB(20, 40, 25),
        TabList = Color3.fromRGB(15, 30, 20),
        TabButtonActive = Color3.fromRGB(35, 70, 40),
        TabButtonInactive = Color3.fromRGB(20, 40, 25),
        TextColor = Color3.fromRGB(200, 255, 200),
    },
    Dark = {
        Background = Color3.fromRGB(15, 15, 15),
        TabList = Color3.fromRGB(10, 10, 10),
        TabButtonActive = Color3.fromRGB(35, 35, 35),
        TabButtonInactive = Color3.fromRGB(20, 20, 20),
        TextColor = Color3.fromRGB(255, 255, 255),
    }
}

function NovaLib:CreateWindow(options)
    local Theme = Themes[options.Theme] or Themes["Default"]

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NovaUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 500, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Visible = false
    MainFrame.Parent = ScreenGui

    Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 12)

    -- Draggable Window
    local dragging, dragInput, dragStart, startPos
    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Size = UDim2.new(1, 0, 0, 40)
    TopBar.BackgroundColor3 = Theme.Background
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame

    Instance.new("UICorner", TopBar).CornerRadius = UDim.new(0, 12)

    local Title = Instance.new("TextLabel")
    Title.Text = options.Name or "Nova Library"
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Theme.TextColor
    Title.TextSize = 18
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, -20, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar

    -- Tab List
    local TabList = Instance.new("ScrollingFrame")
    TabList.Size = UDim2.new(0, 120, 1, -40)
    TabList.Position = UDim2.new(0, 0, 0, 40)
    TabList.BackgroundColor3 = Theme.TabList
    TabList.BorderSizePixel = 0
    TabList.ScrollBarThickness = 0
    TabList.CanvasSize = UDim2.new(0, 0, 0, 0)
    TabList.AutomaticCanvasSize = Enum.AutomaticSize.Y
    TabList.ClipsDescendants = true
    TabList.Parent = MainFrame

    Instance.new("UICorner", TabList).CornerRadius = UDim.new(0, 12)

    local TabsPadding = Instance.new("UIPadding", TabList)
    TabsPadding.PaddingTop = UDim.new(0, 10)
    TabsPadding.PaddingBottom = UDim.new(0, 10)
    TabsPadding.PaddingLeft = UDim.new(0, 5)
    TabsPadding.PaddingRight = UDim.new(0, 5)

    local TabsLayout = Instance.new("UIListLayout", TabList)
    TabsLayout.Padding = UDim.new(0, 6)
    TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TabsLayout.VerticalAlignment = Enum.VerticalAlignment.Top

    -- Loading Screen
    if options.LoadingScreen then
        local LoadingFrame = Instance.new("Frame")
        LoadingFrame.Size = UDim2.new(0, 0, 0, 0)
        LoadingFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
        LoadingFrame.BackgroundColor3 = Theme.Background
        LoadingFrame.Parent = ScreenGui

        local LoadingTitle = Instance.new("TextLabel")
        LoadingTitle.Text = options.LoadingTitle or "Loading..."
        LoadingTitle.Font = Enum.Font.GothamBold
        LoadingTitle.TextSize = 24
        LoadingTitle.TextColor3 = Theme.TextColor
        LoadingTitle.BackgroundTransparency = 1
        LoadingTitle.Size = UDim2.new(1, 0, 0, 40)
        LoadingTitle.Position = UDim2.new(0, 0, 0.5, -40)
        LoadingTitle.Parent = LoadingFrame

        local LoadingSubtitle = Instance.new("TextLabel")
        LoadingSubtitle.Text = options.LoadingSubTitle or ""
        LoadingSubtitle.Font = Enum.Font.Gotham
        LoadingSubtitle.TextSize = 16
        LoadingSubtitle.TextColor3 = Theme.TextColor
        LoadingSubtitle.BackgroundTransparency = 1
        LoadingSubtitle.Size = UDim2.new(1, 0, 0, 30)
        LoadingSubtitle.Position = UDim2.new(0, 0, 0.5, 0)
        LoadingSubtitle.Parent = LoadingFrame

        TweenService:Create(LoadingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 500, 0, 400)}):Play()

        task.wait(0.5)

        task.delay(options.LoadingScreenDuration or 2, function()
            TweenService:Create(LoadingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()
            task.wait(0.5)
            LoadingFrame:Destroy()
            MainFrame.Visible = true
            TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 500, 0, 400)}):Play()
        end)
    else
        MainFrame.Visible = true
    end

    function NovaLib:CreateTab(TabName, TabIconId)
        local TabButton = Instance.new("TextButton")
        TabButton.Size = UDim2.new(1, -10, 0, 45)
        TabButton.BackgroundColor3 = Theme.TabButtonInactive
        TabButton.Text = TabName
        TabButton.Font = Enum.Font.GothamBold
        TabButton.TextColor3 = Theme.TextColor
        TabButton.TextSize = 16
        TabButton.TextXAlignment = Enum.TextXAlignment.Left
        TabButton.LayoutOrder = #TabList:GetChildren()
        TabButton.Parent = TabList

        local TabIcon = Instance.new("ImageLabel")
        TabIcon.Size = UDim2.new(0, 20, 0, 20)
        TabIcon.Position = UDim2.new(1, -25, 0.5, -10)
        TabIcon.Image = "rbxassetid://" .. tostring(TabIconId)
        TabIcon.BackgroundTransparency = 1
        TabIcon.Parent = TabButton

        Instance.new("UICorner", TabButton).CornerRadius = UDim.new(0, 8)

        TabButton.MouseEnter:Connect(function()
            TabButton.BackgroundColor3 = Theme.TabButtonActive
        end)

        TabButton.MouseLeave:Connect(function()
            TabButton.BackgroundColor3 = Theme.TabButtonInactive
        end)

        return TabButton
    end

    return NovaLib
end

return NovaLib
