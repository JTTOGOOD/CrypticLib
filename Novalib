local NovaLib = {}

local TweenService = game:GetService("TweenService")

-- Theme Definitions
local Themes = {
    Default = {
        Background = Color3.fromRGB(20, 20, 20),
        TabList = Color3.fromRGB(15, 15, 15),
        TabButtonActive = Color3.fromRGB(40, 40, 40),
        TabButtonInactive = Color3.fromRGB(20, 20, 20),
        TextColor = Color3.fromRGB(255, 255, 255),
    },
    Ocean = {
        Background = Color3.fromRGB(10, 30, 60),
        TabList = Color3.fromRGB(8, 20, 45),
        TabButtonActive = Color3.fromRGB(20, 50, 80),
        TabButtonInactive = Color3.fromRGB(10, 30, 60),
        TextColor = Color3.fromRGB(180, 220, 255),
    },
    Forest = {
        Background = Color3.fromRGB(20, 40, 25),
        TabList = Color3.fromRGB(15, 30, 20),
        TabButtonActive = Color3.fromRGB(30, 60, 35),
        TabButtonInactive = Color3.fromRGB(20, 40, 25),
        TextColor = Color3.fromRGB(200, 255, 200),
    },
    Dark = {
        Background = Color3.fromRGB(15, 15, 15),
        TabList = Color3.fromRGB(10, 10, 10),
        TabButtonActive = Color3.fromRGB(30, 30, 30),
        TabButtonInactive = Color3.fromRGB(15, 15, 15),
        TextColor = Color3.fromRGB(255, 255, 255),
    }
}

-- CreateWindow Function
function NovaLib:CreateWindow(options)
    -- Ensure the theme is valid, or default to 'Default'
    local Theme = Themes[options.Theme] or Themes["Default"]

    -- ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NovaUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Main Window (hidden initially)
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 500, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    MainFrame.BackgroundColor3 = Theme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Visible = false -- Hide initially
    MainFrame.Parent = ScreenGui

    local MainCorner = Instance.new("UICorner", MainFrame)
    MainCorner.CornerRadius = UDim.new(0, 12)

    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Size = UDim2.new(1, 0, 0, 40)
    TopBar.BackgroundColor3 = Theme.Background
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame

    local TopBarCorner = Instance.new("UICorner", TopBar)
    TopBarCorner.CornerRadius = UDim.new(0, 12)

    local Title = Instance.new("TextLabel")
    Title.Text = options.Name or "Nova Library"
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Theme.TextColor
    Title.TextSize = 18
    Title.BackgroundTransparency = 1
    Title.Size = UDim2.new(1, -20, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar

    -- Tab List (as ScrollingFrame)
    local TabList = Instance.new("ScrollingFrame")
    TabList.Size = UDim2.new(0, 120, 1, -40)
    TabList.Position = UDim2.new(0, 0, 0, 40)
    TabList.BackgroundColor3 = Theme.TabList
    TabList.BorderSizePixel = 0
    TabList.Parent = MainFrame
    TabList.ClipsDescendants = true
    TabList.CanvasSize = UDim2.new(0, 0, 0, 0)

    local TabListCorner = Instance.new("UICorner", TabList)
    TabListCorner.CornerRadius = UDim.new(0, 12)

    local TabsLayout = Instance.new("UIListLayout", TabList)
    TabsLayout.Padding = UDim.new(0, 5)
    TabsLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    TabsLayout.VerticalAlignment = Enum.VerticalAlignment.Top

    -- Loading Screen
    if options.LoadingScreen then
        local LoadingFrame = Instance.new("Frame")
        LoadingFrame.Size = UDim2.new(0, 0, 0, 0) -- Start small
        LoadingFrame.Position = UDim2.new(0.5, -250, 0.5, -200) -- Centered in the middle of the screen
        LoadingFrame.BackgroundColor3 = Theme.Background
        LoadingFrame.Parent = ScreenGui

        local LoadingTitle = Instance.new("TextLabel")
        LoadingTitle.Text = options.LoadingTitle or "Loading..."
        LoadingTitle.Font = Enum.Font.GothamBold
        LoadingTitle.TextSize = 24
        LoadingTitle.TextColor3 = Theme.TextColor
        LoadingTitle.BackgroundTransparency = 1
        LoadingTitle.Size = UDim2.new(1, 0, 0, 40)
        LoadingTitle.Position = UDim2.new(0, 0, 0.5, -40)
        LoadingTitle.Parent = LoadingFrame

        local LoadingSubtitle = Instance.new("TextLabel")
        LoadingSubtitle.Text = options.LoadingSubTitle or ""
        LoadingSubtitle.Font = Enum.Font.Gotham
        LoadingSubtitle.TextSize = 16
        LoadingSubtitle.TextColor3 = Theme.TextColor
        LoadingSubtitle.BackgroundTransparency = 1
        LoadingSubtitle.Size = UDim2.new(1, 0, 0, 30)
        LoadingSubtitle.Position = UDim2.new(0, 0, 0.5, 0)
        LoadingSubtitle.Parent = LoadingFrame

        -- Apply Zoom-In Effect to Loading Screen
        local LoadingTweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In)
        local ZoomInTween = TweenService:Create(LoadingFrame, LoadingTweenInfo, {Size = UDim2.new(0, 500, 0, 400)})
        ZoomInTween:Play()

        task.wait(0.5) -- Wait for zoom-in to finish

        -- Hide the loading screen after the duration and zoom-out
        task.delay(options.LoadingScreenDuration or 2, function()
            -- Zoom-Out Animation for Loading Screen
            local ZoomOutTween = TweenService:Create(LoadingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)})
            ZoomOutTween:Play()

            -- Wait for Zoom-Out and then destroy loading screen and show MainFrame
            task.wait(0.5)
            LoadingFrame:Destroy()

            -- Show Main Frame
            MainFrame.Visible = true

            -- Apply Zoom-In Effect for Main Window
            local MainZoomInTween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 500, 0, 400)})
            MainZoomInTween:Play()
        end)
    end

    -- Tab Component (create tab buttons)
function NovaLib:CreateTab(TabName, TabIconId)
    -- Create Tab Button
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(1, 0, 0, 50)
    TabButton.BackgroundColor3 = Theme.TabButtonInactive
    TabButton.Text = TabName
    TabButton.Font = Enum.Font.GothamBold
    TabButton.TextColor3 = Theme.TextColor
    TabButton.TextSize = 18
    TabButton.TextXAlignment = Enum.TextXAlignment.Left
    TabButton.LayoutOrder = #TabList:GetChildren()  -- Ensure tabs are ordered correctly
    TabButton.Parent = TabList

    -- Add icon to Tab Button (right side)
    local TabIcon = Instance.new("ImageLabel")
    TabIcon.Size = UDim2.new(0, 24, 0, 24)  -- Adjust icon size
    TabIcon.Position = UDim2.new(1, -30, 0.5, -12)  -- Positioned on the right side
    TabIcon.Image = "rbxassetid://" .. tostring(TabIconId)  -- Use the provided Icon ID
    TabIcon.BackgroundTransparency = 1
    TabIcon.Parent = TabButton

    -- Apply UICorner to TabButton for rounded corners
    local TabButtonCorner = Instance.new("UICorner")
    TabButtonCorner.CornerRadius = UDim.new(0, 12)  -- Adjust corner radius as needed
    TabButtonCorner.Parent = TabButton

    -- Apply hover effect to the tab
    TabButton.MouseEnter:Connect(function()
        TabButton.BackgroundColor3 = Theme.TabButtonActive
    end)

    TabButton.MouseLeave:Connect(function()
        TabButton.BackgroundColor3 = Theme.TabButtonInactive
    end)

    return TabButton
end


    return NovaLib
end

return NovaLib
